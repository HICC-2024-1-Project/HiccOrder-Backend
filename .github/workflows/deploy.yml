# 1 워크플로의 이름 지정
name: deploy
# 2 워크플로가 시작될 조건 지정
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  ci:
    name: "Django CI"
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          cd ./backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd ./backend
          echo "{\"SECRET_KEY\": \"$SECRET_KEY\", \"AWS_ACCESS_KEY_ID\": \"$AWS_ACCESS_KEY_ID\", \"AWS_SECRET_ACCESS_KEY\": \"$AWS_SECRET_ACCESS_KEY\"}" > secrets.json
          python manage.py test
          rm secrets.json

  cd:
    name: "Django CD"
    needs: ci
    runs-on: ubuntu-20.04
    steps:
      - name: EC2 ssh connection test
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }} # 연결할 EC2
          username: ${{ secrets.SSH_USERNAME }} # 사용자
          key: ${{ secrets.SSH_PEM }} # pem 파일 내용
          command_timeout: 3m # timeout 시간 설정
          script: |
            sudo apt-get update
            sudo apt-get -y upgrade
            cd /home/ubuntu/HiccOrder-Backend/backend
            source /home/ubuntu/HiccOrder-Backend/backend_env/bin/activate
            git pull
            python manage.py makemigrations
            python manage.py migrate
            sudo systemctl restart gunicorn
            exit 0
